name: Build & Push to GHCR

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - app: backend
            image: orgjet-backend
            context: backend
            dockerfile: backend/Dockerfile
          - app: frontend
            image: orgjet-frontend
            context: frontend
            dockerfile: frontend/Dockerfile

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Debug repo layout
        run: |
          pwd
          ls -la
          find . -maxdepth 3 -type f -name "Dockerfile" -print

      - name: Verify paths exist
        run: |
          test -d "${{ matrix.context }}" || { echo "Missing dir: ${{ matrix.context }}"; exit 1; }
          test -f "${{ matrix.dockerfile }}" || { echo "Missing file: ${{ matrix.dockerfile }}"; exit 1; }

      - name: Set up Buildx (required for cache)
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ matrix.image }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha,format=long
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push ${{ matrix.app }}
        uses: docker/build-push-action@v6
        with:
          context: ./${{ matrix.context }}
          file: ./${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max