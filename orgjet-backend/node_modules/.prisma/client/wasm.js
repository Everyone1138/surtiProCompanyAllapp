
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  role: 'role',
  teamId: 'teamId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TeamScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.RequestTypeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  schemaJson: 'schemaJson',
  defaultSlaMinutes: 'defaultSlaMinutes'
};

exports.Prisma.RequestScalarFieldEnum = {
  id: 'id',
  typeId: 'typeId',
  createdById: 'createdById',
  assigneeId: 'assigneeId',
  teamId: 'teamId',
  title: 'title',
  description: 'description',
  company: 'company',
  companyId: 'companyId',
  priority: 'priority',
  currentStatus: 'currentStatus',
  metadataJson: 'metadataJson',
  dueAt: 'dueAt',
  slaBreachAt: 'slaBreachAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RequestAssigneeScalarFieldEnum = {
  id: 'id',
  requestId: 'requestId',
  userId: 'userId',
  assignedAt: 'assignedAt'
};

exports.Prisma.RequestEventScalarFieldEnum = {
  id: 'id',
  requestId: 'requestId',
  actorId: 'actorId',
  eventType: 'eventType',
  payloadJson: 'payloadJson',
  createdAt: 'createdAt'
};

exports.Prisma.AttachmentScalarFieldEnum = {
  id: 'id',
  requestId: 'requestId',
  uploadedById: 'uploadedById',
  url: 'url',
  name: 'name',
  size: 'size',
  mime: 'mime',
  createdAt: 'createdAt'
};

exports.Prisma.SLAConfigScalarFieldEnum = {
  id: 'id',
  teamId: 'teamId',
  typeId: 'typeId',
  priority: 'priority',
  targetMinutes: 'targetMinutes'
};

exports.Prisma.ScheduleScalarFieldEnum = {
  id: 'id',
  teamId: 'teamId',
  tz: 'tz',
  workdaysJson: 'workdaysJson',
  holidaysJson: 'holidaysJson'
};

exports.Prisma.SubscriptionScalarFieldEnum = {
  id: 'id',
  requestId: 'requestId',
  userId: 'userId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  Team: 'Team',
  RequestType: 'RequestType',
  Request: 'Request',
  RequestAssignee: 'RequestAssignee',
  RequestEvent: 'RequestEvent',
  Attachment: 'Attachment',
  SLAConfig: 'SLAConfig',
  Schedule: 'Schedule',
  Subscription: 'Subscription'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\campo\\OneDrive\\Desktop\\surtiProCompanyAllapp\\orgjet-backend\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\campo\\OneDrive\\Desktop\\surtiProCompanyAllapp\\orgjet-backend\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.3",
  "engineVersion": "bb420e667c1820a8c05a38023385f6cc7ef8e83a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlite",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id        String   @id @default(cuid())\n  name      String\n  email     String   @unique\n  password  String\n  role      String   @default(\"REQUESTER\") // string instead of enum\n  team      Team?    @relation(fields: [teamId], references: [id])\n  teamId    String?\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  requestsCreated     Request[]         @relation(\"requestsCreated\")\n  requestsAssigned    Request[]         @relation(\"requestsAssigned\")\n  events              RequestEvent[]\n  subscriptions       Subscription[]\n  attachmentsUploaded Attachment[]      @relation(\"attachmentsUploaded\")\n  assignments         RequestAssignee[] // <â€” many-to-many via join table\n}\n\nmodel Team {\n  id         String      @id @default(cuid())\n  name       String      @unique\n  users      User[]\n  slaConfigs SLAConfig[]\n  schedules  Schedule[]\n  requests   Request[]\n}\n\nmodel RequestType {\n  id                String @id @default(cuid())\n  name              String @unique\n  schemaJson        String\n  defaultSlaMinutes Int    @default(1440)\n\n  requests   Request[]\n  slaConfigs SLAConfig[] // reverse side of SLAConfig.type\n}\n\nmodel Request {\n  id     String      @id @default(cuid())\n  type   RequestType @relation(fields: [typeId], references: [id])\n  typeId String\n\n  createdBy   User   @relation(\"requestsCreated\", fields: [createdById], references: [id])\n  createdById String\n\n  // Legacy single assignee (kept for backwards-compat; multi-assignee uses RequestAssignee)\n  assignee   User?   @relation(\"requestsAssigned\", fields: [assigneeId], references: [id])\n  assigneeId String?\n\n  team   Team?   @relation(fields: [teamId], references: [id])\n  teamId String?\n\n  title         String\n  description   String\n  company       String?\n  companyId     String?\n  priority      String    @default(\"MEDIUM\") // string instead of enum\n  currentStatus String    @default(\"NEW\") // string instead of enum\n  metadataJson  String    @default(\"{}\")\n  dueAt         DateTime?\n  slaBreachAt   DateTime?\n  createdAt     DateTime  @default(now())\n  updatedAt     DateTime  @updatedAt\n\n  // Relations\n  events        RequestEvent[]\n  attachments   Attachment[]\n  subscriptions Subscription[]\n\n  // Multi-assignee join\n  assignments RequestAssignee[]\n}\n\nmodel RequestAssignee {\n  id         String   @id @default(cuid())\n  requestId  String\n  userId     String\n  assignedAt DateTime @default(now())\n\n  request Request @relation(fields: [requestId], references: [id])\n  user    User    @relation(fields: [userId], references: [id])\n\n  @@unique([requestId, userId])\n}\n\nmodel RequestEvent {\n  id          String   @id @default(cuid())\n  request     Request  @relation(fields: [requestId], references: [id])\n  requestId   String\n  actor       User     @relation(fields: [actorId], references: [id])\n  actorId     String\n  eventType   String\n  payloadJson String   @default(\"{}\")\n  createdAt   DateTime @default(now())\n}\n\nmodel Attachment {\n  id           String   @id @default(cuid())\n  request      Request  @relation(fields: [requestId], references: [id])\n  requestId    String\n  uploadedBy   User     @relation(\"attachmentsUploaded\", fields: [uploadedById], references: [id])\n  uploadedById String\n  url          String\n  name         String\n  size         Int\n  mime         String\n  createdAt    DateTime @default(now())\n}\n\nmodel SLAConfig {\n  id            String      @id @default(cuid())\n  team          Team        @relation(fields: [teamId], references: [id])\n  teamId        String\n  type          RequestType @relation(fields: [typeId], references: [id])\n  typeId        String\n  priority      String // string instead of enum\n  targetMinutes Int\n}\n\nmodel Schedule {\n  id           String @id @default(cuid())\n  team         Team   @relation(fields: [teamId], references: [id])\n  teamId       String\n  tz           String\n  workdaysJson String\n  holidaysJson String\n}\n\nmodel Subscription {\n  id        String  @id @default(cuid())\n  request   Request @relation(fields: [requestId], references: [id])\n  requestId String\n  user      User    @relation(fields: [userId], references: [id])\n  userId    String\n}\n",
  "inlineSchemaHash": "f6cd498b8b0ae6c11cbdae2ce3779b02fa2a3f59173269f9fa0f0301328fe03b",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"team\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"TeamToUser\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"requestsCreated\",\"kind\":\"object\",\"type\":\"Request\",\"relationName\":\"requestsCreated\"},{\"name\":\"requestsAssigned\",\"kind\":\"object\",\"type\":\"Request\",\"relationName\":\"requestsAssigned\"},{\"name\":\"events\",\"kind\":\"object\",\"type\":\"RequestEvent\",\"relationName\":\"RequestEventToUser\"},{\"name\":\"subscriptions\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"SubscriptionToUser\"},{\"name\":\"attachmentsUploaded\",\"kind\":\"object\",\"type\":\"Attachment\",\"relationName\":\"attachmentsUploaded\"},{\"name\":\"assignments\",\"kind\":\"object\",\"type\":\"RequestAssignee\",\"relationName\":\"RequestAssigneeToUser\"}],\"dbName\":null},\"Team\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TeamToUser\"},{\"name\":\"slaConfigs\",\"kind\":\"object\",\"type\":\"SLAConfig\",\"relationName\":\"SLAConfigToTeam\"},{\"name\":\"schedules\",\"kind\":\"object\",\"type\":\"Schedule\",\"relationName\":\"ScheduleToTeam\"},{\"name\":\"requests\",\"kind\":\"object\",\"type\":\"Request\",\"relationName\":\"RequestToTeam\"}],\"dbName\":null},\"RequestType\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"schemaJson\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"defaultSlaMinutes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"requests\",\"kind\":\"object\",\"type\":\"Request\",\"relationName\":\"RequestToRequestType\"},{\"name\":\"slaConfigs\",\"kind\":\"object\",\"type\":\"SLAConfig\",\"relationName\":\"RequestTypeToSLAConfig\"}],\"dbName\":null},\"Request\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"object\",\"type\":\"RequestType\",\"relationName\":\"RequestToRequestType\"},{\"name\":\"typeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"requestsCreated\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assignee\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"requestsAssigned\"},{\"name\":\"assigneeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"team\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"RequestToTeam\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"company\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"priority\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currentStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadataJson\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dueAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"slaBreachAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"events\",\"kind\":\"object\",\"type\":\"RequestEvent\",\"relationName\":\"RequestToRequestEvent\"},{\"name\":\"attachments\",\"kind\":\"object\",\"type\":\"Attachment\",\"relationName\":\"AttachmentToRequest\"},{\"name\":\"subscriptions\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"RequestToSubscription\"},{\"name\":\"assignments\",\"kind\":\"object\",\"type\":\"RequestAssignee\",\"relationName\":\"RequestToRequestAssignee\"}],\"dbName\":null},\"RequestAssignee\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requestId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assignedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"request\",\"kind\":\"object\",\"type\":\"Request\",\"relationName\":\"RequestToRequestAssignee\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RequestAssigneeToUser\"}],\"dbName\":null},\"RequestEvent\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"request\",\"kind\":\"object\",\"type\":\"Request\",\"relationName\":\"RequestToRequestEvent\"},{\"name\":\"requestId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"actor\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RequestEventToUser\"},{\"name\":\"actorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eventType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payloadJson\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Attachment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"request\",\"kind\":\"object\",\"type\":\"Request\",\"relationName\":\"AttachmentToRequest\"},{\"name\":\"requestId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"uploadedBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"attachmentsUploaded\"},{\"name\":\"uploadedById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"mime\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"SLAConfig\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"team\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"SLAConfigToTeam\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"object\",\"type\":\"RequestType\",\"relationName\":\"RequestTypeToSLAConfig\"},{\"name\":\"typeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"priority\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"targetMinutes\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null},\"Schedule\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"team\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"ScheduleToTeam\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tz\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workdaysJson\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"holidaysJson\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Subscription\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"request\",\"kind\":\"object\",\"type\":\"Request\",\"relationName\":\"RequestToSubscription\"},{\"name\":\"requestId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SubscriptionToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

